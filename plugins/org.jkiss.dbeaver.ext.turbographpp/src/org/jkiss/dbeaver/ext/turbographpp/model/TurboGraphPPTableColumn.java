/*
 * DBeaver - Universal Database Manager
 * Copyright (C) 2010-2024 DBeaver Corp and others
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.jkiss.dbeaver.ext.turbographpp.model;

import org.jkiss.dbeaver.DBException;
import org.jkiss.dbeaver.ext.generic.model.GenericTableBase;
import org.jkiss.dbeaver.ext.generic.model.GenericTableColumn;
import org.jkiss.dbeaver.model.meta.Property;

public class TurboGraphPPTableColumn extends GenericTableColumn {

    public TurboGraphPPTableColumn(
            GenericTableBase table,
            String columnName,
            String typeName,
            long columnSize,
            Integer scale,
            Integer precision)
            throws DBException {
        super(table);
        setName(columnName);
        setTypeName(typeName);
        setPrecision(precision);
        setMaxLength(columnSize);
        setScale(scale);
    }
    
    public TurboGraphPPTableColumn(
            GenericTableBase table,
            String columnName)
            throws DBException {
        super(table);
        setName(columnName);
        setTypeName("");
    }

    @Override
    @Property(viewable = true, editable = false, order = 1)
    public String getName() {
        return super.getName();
    }

    @Override
    @Property(viewable = true, editable = false, order = 2)
    public String getTypeName() {
        return super.getTypeName();
    }

    @Override
    @Property(viewable = false, editable = false, order = 3)
    public long getMaxLength() {
        // TODO Auto-generated method stub
        return super.getMaxLength();
    }
    
    @Override
    @Property(viewable = true, editable = false, order = 5)
    public Integer getPrecision() {
        return super.getPrecision();
    }

    @Override
    @Property(viewable = true, editable = false, order = 4)
    public Integer getScale() {
        return super.getScale();
    }

    @Override
    @Property(viewable = false, editable = false, order = 3)
    public int getOrdinalPosition() {
        return super.getOrdinalPosition();
    }

    @Property(viewable = false, editable = false)
    @Override
    public String getDefaultValue() {
        return "";
    }

    @Property(viewable = false, editable = false, order = 52)
    public boolean isAutoIncrement() {
        return false;
    }

    @Property(viewable = false, editable = false)
    @Override
    public boolean isRequired() {
        return false;
    }

    @Property(viewable = false, editable = false)
    @Override
    public boolean isAutoGenerated() {
        return false;
    }

    @Property(viewable = false, editable = false)
    @Override
    public String getDescription() {
        return null;
    }
}
